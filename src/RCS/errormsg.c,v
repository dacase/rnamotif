head	1.10;
access;
symbols;
locks; strict;
comment	@ * @;


1.10
date	2000.12.17.23.46.43;	author macke;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.17.22.56.52;	author macke;	state Exp;
branches;
next	1.8;

1.8
date	2000.12.15.22.40.44;	author macke;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.04.19.12.58;	author macke;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.07.05.18.40;	author macke;	state Exp;
branches;
next	1.5;

1.5
date	99.10.03.18.58.10;	author macke;	state Exp;
branches;
next	1.4;

1.4
date	99.06.20.01.53.44;	author macke;	state Exp;
branches;
next	1.3;

1.3
date	98.12.23.19.41.57;	author macke;	state Exp;
branches;
next	1.2;

1.2
date	98.12.19.19.46.48;	author macke;	state Exp;
branches;
next	1.1;

1.1
date	98.12.19.03.28.47;	author macke;	state Exp;
branches;
next	;


desc
@errormsg reporter for rnamot.
@


1.10
log
@returned rm_wdfname to * from [].
@
text
@#include <stdio.h>

extern	int	rm_error;
extern	char	*rm_wdfname;
extern	int	rm_emsg_lineno;

void	RM_errormsg( int fatal, char msg[] )
{

	rm_error = 1;
	fprintf( stderr, "%s:%d %s\n", rm_wdfname, rm_emsg_lineno, msg );
	if( fatal )
		exit( 1 );
}
@


1.9
log
@changed ref of rm_wdfname from * to [].
@
text
@d4 1
a4 1
extern	char	rm_wdfname[];
@


1.8
log
@changed print stmt to use rm_wdfname vs rm_dfname.  rm_wdfname is
the current (possibly included) source file.
@
text
@d4 1
a4 1
extern	char	*rm_wdfname;
@


1.7
log
@changed rm_dfname to be pointer to space holding descr file name
vs original fixed location.
@
text
@d4 1
a4 1
extern	char	*rm_dfname;
d11 1
a11 1
	fprintf( stderr, "%s:%d %s\n", rm_dfname, rm_emsg_lineno, msg );
@


1.6
log
@converted header from K&R to ANSI.
@
text
@d4 1
a4 1
extern	char	rm_dfname[];
@


1.5
log
@changed name from errormsg to RM_errormsg()
@
text
@d7 1
a7 3
void	RM_errormsg( fatal, msg )
int	fatal;
char	msg[];
@


1.4
log
@changed name rm_fname to rm_dfname to indicate descriptor file vs
database file (rm_dbfname)
@
text
@d7 1
a7 1
void	errormsg( fatal, msg )
@


1.3
log
@changed names of rmfname, rmemsglineno to rm_fname, rm_emsg_lineno; added
ref to extern rm_error, which errormsg now sets to indicate an error was
detected
@
text
@d4 1
a4 1
extern	char	rm_fname[];
d13 1
a13 1
	fprintf( stderr, "%s:%d %s\n", rm_fname, rm_emsg_lineno, msg );
@


1.2
log
@changed use of rmlineno to rmemsglineno.
@
text
@d3 3
a5 2
extern	char	rmfname[];
extern	int	rmemsglineno;
d12 2
a13 1
	fprintf( stderr, "%s:%d %s\n", rmfname, rmemsglineno, msg );
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
extern	int	rmlineno;
d11 1
a11 1
	fprintf( stderr, "%s:%d %s\n", rmfname, rmlineno, msg );
@
